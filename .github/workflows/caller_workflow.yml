name: reusable-testing-linting-pipeline

on:
  workflow_call:

env:
  JEST_JUNIT_OUTPUT_FILE: "/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/*.xml"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  checks: write
  issues: read
  pull-requests: write

jobs:
  Unit-Tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          pytest app/ --cov=app/ --junitxml=unit-test-results.xml
      - name: Publish Test Results
        uses: bcg-ep-smp/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: Unit-Tests-Report
          junit_files: ${{ env.JEST_JUNIT_OUTPUT_FILE }}

  Linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check syntax with py_compile
        if: ${{ inputs.has_main_file }}
        run: python -m py_compile app/main.py
        continue-on-error: false
      - name: Install linters
        run: |
          pip install flake8
      - name: Check formatting
        run: |
          python -m flake8
        continue-on-error: false